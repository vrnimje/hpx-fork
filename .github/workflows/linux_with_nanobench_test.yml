# Copyright (c) 2024 Vedant Nimje
#
# SPDX-License-Identifier: BSL-1.0
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

name: Linux CI (Debug) with Nanobench Benchmark Test

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    container: stellargroup/build_env:14

    steps:
    - uses: actions/checkout@v4
    - name: Configure
      shell: bash
      run: |
          cmake \
              . \
              -Bbuild \
              -GNinja \
              -DCMAKE_BUILD_TYPE=Debug \
              -DHPX_WITH_MALLOC=system \
              -DHPX_WITH_FETCH_ASIO=ON \
              -DHPX_WITH_EXAMPLES=ON \
              -DHPX_WITH_TESTS=ON \
              -DHPX_WITH_NANOBENCH=ON \
              -DHPX_WITH_TESTS_MAX_THREADS_PER_LOCALITY=2 \
              -DHPX_WITH_CHECK_MODULE_DEPENDENCIES=On
    - name: Build
      shell: bash
      run: |
          cmake --build build/ --target tests.performance.modules.segmented_algorithms.minmax_element_performance
    - name: Test
      shell: bash
      run: |
          cd build
          ./bin/minmax_element_performance_test

    - name: Test with detailed output
      shell: bash
      run: |
          cd build
          ./bin/minmax_element_performance_test --detailed_bench > bench1.json

    - name: Checkout to master
      shell: bash
      run: |
          git config --global --add safe.directory '*'
          git fetch origin nano_test:nano_test
          git checkout nano_test

    - name: Build master
      shell: bash
      run: |
          cmake --build build/ --target tests.performance.modules.segmented_algorithms.minmax_element_performance
    - name: Test master
      shell: bash
      run: |
          cd build
          ./bin/minmax_element_performance_test

    - name: Test master with detailed output
      shell: bash
      run: |
          cd build
          ./bin/minmax_element_performance_test --detailed_bench > bench2.json

    - name: Gen bench img
      shell: bash
      run: |
          cd tools
          pip install matplotlib
          python3 perftests_plot.py ../build/bench1.json ../build/bench2.json

    - name: Upload img
      uses: actions/upload-artifact@v4
      id: artifact-upload-step
      with:
        name: test-img
        path: tools/test.jpg

    - name: Comment on PR
      uses: actions/github-script@v6
      with:
        github-token: ${{ github.token }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '[res](${{ steps.artifact-upload-step.outputs.artifact-url }})'
          })



    
          
